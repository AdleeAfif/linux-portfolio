# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: self-hosted # Changed to self-hosted

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - name: Installing Packages 🥁
        run: npm ci

      - name: Building 🧱
        run: npm run build
        env:
          NEXT_PUBLIC_USER_ID: ${{ secrets.NEXT_PUBLIC_USER_ID }}
          NEXT_PUBLIC_TEMPLATE_ID: ${{ secrets.NEXT_PUBLIC_TEMPLATE_ID }}
          NEXT_PUBLIC_SERVICE_ID: ${{ secrets.NEXT_PUBLIC_SERVICE_ID }}
          NEXT_PUBLIC_TRACKING_ID: ${{ secrets.NEXT_PUBLIC_TRACKING_ID }}

      - name: Exporting Bundle Files 🎪
        run: npm run export
      - run: touch ./out/.nojekyll

      - name: Deploy to Github-Pages 🚀
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          branch: gh-pages
          folder: out

      - name: Automated Cleanup 🧹 
        if: always()
        run: |
          echo "🧹 Starting cleanup process..."

          # Clear npm cache
          npm cache clean --force
          echo "✅ NPM cache cleared"

          # Remove build artifacts (safe to remove)
          if [ -d ".next" ]; then
            rm -rf .next
            echo "✅ .next directory removed"
          fi

          if [ -d "out" ]; then
            rm -rf out
            echo "✅ out directory removed"
          fi

          # Remove node_modules (will be reinstalled next time)
          if [ -d "node_modules" ]; then
            rm -rf node_modules
            echo "✅ node_modules removed"
          fi

          # Clear any temporary files
          find . -name "*.tmp" -delete 2>/dev/null || true
          find . -name "*.log" -delete 2>/dev/null || true

          echo "🎉 Cleanup completed successfully!"
